<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Yen-Ting, Su Personal Website</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Yen-Ting, Su Personal Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 25 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>上市股票Beta估計</title>
      <link>/blog/stock-beta/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/stock-beta/</guid>
      <description>前言最近在幫老師製作教學講義的案例，要用資本資產定價模型(Capital Asset Pricing Model, CAPM)，去估計2017年每支上市股票的\(\beta\)。這個問題在碩士班時就有用程式寫過，並沒有很難。但當時程式能力弱弱的，主要是用迴圈去一支一支計算。這次要寫這個程式有一些新的想法，之前看網路上的文章有用到apply家族可以一次估計多個模型的範例，因此透過這次的題目，可以把這個想法實作出來。
資本資產定價模型(CAPM)資本資產定價模型(CAPM)是財務領域中的重要模型之一，主要用於解釋資本市場如何決定股票的報酬率。財金系的大二學生，在上財務管理或投資學時，一定會學到這個模型。此模型用一般無截距的最小平方法(Ordinary Least Squares, OLS)估計即可，模型如下：
\[E(R_i)-R_f=\beta (E(R_m)-R_f)\]
\(E(R_i)\)：股票\(i\)的期望報酬率
\(E(R_i)-R_f\)：股票\(i\)的市場風險溢酬
\(E(R_m)\)：市場的期望報酬率
\(E(R_m)-R_f\)：市場風險溢酬
\(R_f\)：無風險利率
估計樣本的時間頻率一般會採用月頻，樣本數為近60個月。這個模型的重點是在看估計出來的\(\beta\)，\(\beta\)是衡量這支股票報酬率與市場報酬率之間的連動性。
若\(\beta\)等於1，代表每當市場報酬率上升1%時，股票期望報酬也會跟著上升1%。
若\(\beta\)等於1.2，代表每當市場報酬率上升1%時，股票期望報酬會上升1.2%
若\(\beta\)等於0.5，代表每當市場報酬率上升1%時，股票期望報酬只會上升0.5%。
詳細的模型說明可參考維基百科。
資料來源資料是從TEJ資料庫取得，我們以2017年12月為估計時點，需要60個月的樣本，因此資料期間為2013年1月至2017年12月。市場月報酬率以報酬指數計算得出，股票報酬率以調整後價格計算，無風險利率採用臺灣銀行一年期定存利率月化。
實作過程資料整理的部份此處略過，主要是透過tidyverse套件來整理資料，並確保每支股票在2013年1月至2017年12月之間，共有60筆完整樣本，若沒有則會被踢除。資料整理完後，欄位如下圖所示：
library(tidyverse)# 讀取資料load(&amp;quot;./stock-beta/data.Rdata&amp;quot;)# 呈現資料前10筆內容head(data,10) ## # A tibble: 10 x 5## code name yearMonth monthRetDiffRf mktRetDiffRf## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 1101 台泥 201301 0.02185934 0.007980063## 2 1101 台泥 201302 -0.</description>
    </item>
    
    <item>
      <title>爬蟲-財富中國500強股票排行榜資料</title>
      <link>/blog/web-crawler-fortune-china-500/</link>
      <pubDate>Sat, 10 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/web-crawler-fortune-china-500/</guid>
      <description>前言最近學弟想要爬財富中國500強排行榜的網頁資料，但遇到一些困難來詢問我。研究一下網站，發現能力所及能夠處理這個問題，爬得過程也蠻有趣的，因此在這邊分享爬法。先簡介一下財富中國500強排行榜是什麼，網站裡面介紹到：
财富中文网于北京时间2017年7月31日发布了最新的《财富》中国500强排行榜。该榜单由《财富》（中文版）与中金公司财富管理部合作编制，考量了全球范围内最大的中国上市企业在过去一年的业绩和成就。
看到這段介紹，我最好奇的是「過去一年的業績與成就」到底是怎麼量化的，但Google發現好像都沒有相關敘述，這個問題只好暫時擱著，先來抓資料!
目標學弟這次想問的是要怎麼爬中國500強名單的股票代碼，目前網站上提供的中國500強名單只有列出中文公司名稱、營收及利潤資訊。
如果要查詢股票的進階資訊，可以直接點選公司名稱跳轉到下一個網頁，裡面就會有存放股票的代碼資訊，就是我們想要的資料。
爬取網頁流程首先試抓第1強的中國石油化工股份有限公司的股票代碼，這家公司有在4個交易所掛牌，所以有4個股票代碼。
library(rvest)library(magrittr)# 爬取網頁網址(中國石油化工股份有限公司)url &amp;lt;- &amp;quot;http://www.fortunechina.com/china500/1/2017&amp;quot;# 爬取股票代碼code &amp;lt;- read_html(url, encoding = &amp;quot;UTF-8&amp;quot;) %&amp;gt;%html_nodes(xpath=&amp;quot;//div[@class=&amp;#39;thisyeardata&amp;#39;]/table//tr[3]/td[1]&amp;quot;) %&amp;gt;%html_text() %&amp;gt;%.[1] %&amp;gt;%gsub(&amp;quot;股票代码：&amp;quot;,&amp;quot;&amp;quot;, .) %&amp;gt;%gsub(&amp;quot;\\s+&amp;quot;,&amp;quot;&amp;quot;, .)發現資料其實還蠻好抓的，再來觀察網址，發現網址好像藏有規律。
第1名的中國石油化工股份有限公司網址：
http://www.fortunechina.com/china500/1/2017
第2名的中國石油天然氣股份有限公司網址：
http://www.fortunechina.com/china500/2/2017
初步判定網址好像是以 china500/排名/2017 的規律來建構的。如果是這樣，只要迴圈數字1~500，透過字串組合就可以把500家公司的股票代碼全部抓下來。但是事情沒這麼簡單，當我直接輸入排名第500的網址 http://www.fortunechina.com/china500/500/2017，結果網頁出現的畫面是：
網頁竟然查不出資料，代表我們推論的網址邏輯有錯誤。經過仔細檢查發現，發現網址是沒有規律的。第3名的中國建築股份有限公司，我們以為網址的排名竟然是9。
http://www.fortunechina.com/china500/9/2017。
這樣一來，我們就不能用迴圈數字1至500搭配字串組合網址來下載500強公司的代碼，只好找找看有沒有其他的方法。
依照過往經驗，像這種表格式，然後可以點選表格內容跳轉到其他頁面的網站，網頁原始碼內都會藏有超連結。仔細看網頁原始碼，果然真的有！而且500強的連結都存放在裡面。
接下來，我們的目標轉成去爬網頁原始碼內的500強連結，為方便確認資料內容，這邊連股票名稱一起爬下來。
# 爬取網頁網址(財富中國500強排行榜)url &amp;lt;- &amp;quot;http://www.fortunechina.com/fortune500/c/2017-07/31/content_287415.htm&amp;quot;# 爬取500強公司名稱stockName &amp;lt;- read_html(url, encoding = &amp;quot;UTF-8&amp;quot;) %&amp;gt;%html_nodes(xpath=&amp;quot;//table[@id=&amp;#39;yytable&amp;#39;]//tr/td[3]&amp;quot;) %&amp;gt;%html_text()# 爬取500強連結link &amp;lt;- read_html(url, encoding = &amp;quot;UTF-8&amp;quot;) %&amp;gt;%html_nodes(xpath=&amp;quot;//table[@id=&amp;#39;yytable&amp;#39;]//tr/td[3]/a&amp;quot;) %&amp;gt;%html_attr(&amp;quot;href&amp;quot;)# 整理連結內容link &amp;lt;- link %&amp;gt;%gsub(&amp;quot;.</description>
    </item>
    
    <item>
      <title>利用R的Blogdown套件建立個人部落格網站</title>
      <link>/blog/create-my-website/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/create-my-website/</guid>
      <description>前言此次的文章主要是記錄我的個人部落格網站是如何建立出來的，我主要是Follow這篇文章 用R语言的blogdown+hugo+netlify+github 建博客 來架設。不過在按部就班的過程中有遇到一些問題，所以我這邊會在講述我順利架設的流程，提供給大家參考。有些地方我可能不會講得很清楚，可以和我Follow的文章搭配一起看。
架設這個網站會需要用到：
RRstudioR的blogdown套件GitGithubNetlify會採用這個架構來建立部落格網站，主要原因是因為R語言是我現在寫程式最主要的工具。在之前我有嘗試用Jekyll+Github部署的方式來建立部落格網站，但發現如果要在Markdown中呈現R語言程式的執行結果，好像會有困難(?)。後來發現Rstudio有出 blogdown套件，所以就跳過來用blogdown套件來達成我想要的目標。
在本機端建立部落格專案在參考的文章中，是先利用R專案(Project)的Git GUI的功能，來連結Github。再從這個專案資料夾中，創造另外一個R的Blogdown專案，負責處理部落格內容。但我發現在Rstudio內使用Git的GUI實在不是很順暢，比如說我想點選要Push的檔案上傳到Github，會時常卡住沒反應。網路上有人說Windows在這部份好像一直都有問題(?)，後來我就放棄，改採最一般的方法來處理。
我的處理方式是，先在Github上建立好Repository，然後利用命令提示字元(cmd)，把在Github的專案Clone到本機端。之後在本機端的Repository資料夾，建立R的Blogdown專案。以下是我的步驟：
首先在Github建立Repository，名稱就依自己喜好，能認得就好，我在這邊命名為「MyBlog」。
在建立完Repository後，打開命令提示字元，利用git clone指令把Repository Clone到本機端。
開啟RStudio，點選建立專案。
選擇New Directory。
選擇Website using blogdown，開啟Blogdown專案。
接下來這邊要注意，因為我們要把部落格專案內容放到Github的資料夾，所以Directory name要和Repository的名稱是一樣的，路徑也要和Repository所在的路徑相同。
另外此處也可以調整想要建立的主題，只要修改Hugo theme 就可以了。
主題可到Hugo的主題網站查詢 https://themes.gohugo.io，挑選自己喜歡的主題，像我的主題是挑選 Cocoa。如果喜歡這個主題，只要點選Download，就會跳轉到該主題的Github頁面。
只要把使用者和Repository名稱複製下來，貼到Hugo theme，就可以使用該主題。
以Cocoa主題為例，Hugo theme這邊就要輸入nishanths/cocoa-hugo-theme。
另外需要注意的是，不同的主題內的設置有可能會不一樣，因為Hugo並不是只有Rstudio能處理，開發主題的人並不一定會以Rstudio的Blogdown設定來配合設計。舉例來說，如果使用Cocoa主題，部落格的文章是讀取content/blog的資料夾。如果用Rstudio內的Addins的New Post來發表文章，則會放在content/post資料夾內，因此會發現部落格都不會讀到自己寫的文章，我自己後來是去改Cocoa主題內的程式碼來修正此問題。為了方便教學，這邊還是用原本的主題吧！設定如下：
在確認設置都沒問題後，點選Create Project按鈕，這樣R的Blogdown專案就建構完成。Rstudio會重新開啟，這時候就會發現右下角的檔案目錄已經把Hugo需要的檔案都布置好啦！
接下來只要在Console上，輸入blogdown::serve_site()，就可以產生出部落格網站。
右下角的Viewer視窗就是網站的預覽，可以點選紅框內的圖案，就可以用瀏覽器觀看。
以上就是在本機端建立部落格專案的流程。
部落格專案內容在Blogdown這個專案的資料夾內，大概需要注意的是這4點：
config.toml這個檔案是主題作者提供的客製化參數，也是我們主要修改的部分，譬如更改聯絡資訊、網站圖片、網站標題等，都在這邊進行修正。
撰寫的文章要放在content/post資料夾內(但這邊要看各主題的配置，有些可能不是放在post內)。
Public這個資料夾是網站輸出的成果，執行blogdown::serve_site()時會根據當前目錄內的檔案自動產生或者覆蓋，完全不用動到這個資料夾。</description>
    </item>
    
  </channel>
</rss>